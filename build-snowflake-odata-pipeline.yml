# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  branches:
    include:
    - develop
    - release

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'hansanders containerregistry'
  imageRepository: 'snowflake-odata'
  containerRegistry: 'hansanders.azurecr.io'
  dockerfilePath: 'Dockerfile'
  tag: '$(Build.BuildNumber)'
  latestTag: 'latest'
  
jobs:  
- job: Build
  displayName: Build and Push Docker images
  pool:
    vmImage: ubuntu-20.04
  steps:
  - task: Docker@2
    inputs:
      containerRegistry: 'launchpad'
      command: 'login'
  - task: CmdLine@2
    inputs:
      script: 'mvn install'
  # Build Docker image
  - task: Docker@2
    displayName: 'Build image'
    inputs:
      command: build
      repository: $(imageRepository)
      dockerfile: '$(dockerfilePath)'
      containerRegistry: $(dockerRegistryServiceConnection)
      tags: |
        $(tag)
        $(latestTag)

  - task: AzureResourceManagerTemplateDeployment@3
    displayName: "Validate template"
    inputs:
      deploymentScope: "Resource Group"
      azureResourceManagerConnection: hansanders-test-devops
      action: "Create Or Update Resource Group"
      resourceGroupName: "hansanders-dev"
      location: "West Europe"
      templateLocation: "Linked artifact"
      csmFile: "container-template.json"
      csmParametersFile: "container-parameters-dev.json"
      overrideParameters: '-containerTag $(tag)'
      deploymentMode: Validation

  # Publish Docker image, but only if branch is 'develop' or 'release'
  - task: Docker@2
    condition:  and(succeeded(), or(startsWith(variables['build.sourceBranch'], 'refs/heads/develop'), startsWith(variables['build.sourceBranch'], 'refs/heads/release')))
    displayName: 'Push image to $(tag) and $(latestTag)'
    inputs:
      command: Push
      repository: $(imageRepository)
      dockerfile: '$(dockerfilePath)'
      containerRegistry: $(dockerRegistryServiceConnection)
      tags: |
        $(tag)
        $(latestTag)
  - task: PublishBuildArtifacts@1
    condition:  and(succeeded(), or(startsWith(variables['build.sourceBranch'], 'refs/heads/develop'), startsWith(variables['build.sourceBranch'], 'refs/heads/release')))
    displayName: 'Publish Artifact: Container Templates'
    inputs:
      PathtoPublish: "container-template.json"
      ArtifactName: container-templates
