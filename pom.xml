<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>nl.inergy.connector</groupId>
	<artifactId>snowflake-odata</artifactId>
	<version>0.2.0</version>
	<name>${project.groupId}:${project.artifactId}</name>
	<description>An oData service for databases</description>
	<packaging>war</packaging>
	<url>https://www.rtdi.io/</url>
	<scm>
		<connection>scm:git:git://github.com/rtdi/JDBCoData.git</connection>
		<developerConnection>scm:git:ssh:git@github.com:rtdi/JDBCoData.git</developerConnection>
		<url>https://github.com/rtdi/JDBCoData</url>
	</scm>
	<developers>
		<developer>
			<name>Werner Daehn</name>
			<email>werner.daehn@rtdi.io</email>
			<organization>rtdi.io GmbH</organization>
			<organizationUrl>https://www.rtdi.io</organizationUrl>
		</developer>
		<developer>
			<name>Richard Kooijman</name>
			<email>richard.kooijman@inergy.nl</email>
			<organization>Inergy</organization>
			<organizationUrl>https://www.inergy.nl</organizationUrl>
		</developer>
	</developers>
	<licenses>
		<license>
			<name>Commercial License - please contact rtdi.io</name>
			<url>http://www.rtdi.io</url>
		</license>
	</licenses>
	<distributionManagement>
		<snapshotRepository>
			<id>ossrh</id>
			<name>Central Repository OSSRH</name>
			<url>https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/</url>
		</snapshotRepository>
	</distributionManagement>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<junit.jupiter.version>5.8.1</junit.jupiter.version>
		<log4j.version>2.17.0</log4j.version>
		<cargo-maven3-plugin.version>1.9.13</cargo-maven3-plugin.version>
		<payara.version>5.2022.2</payara.version>
		<maven.compiler.source>11</maven.compiler.source>
		<maven.compiler.target>11</maven.compiler.target>
	</properties>
	<build>
		<finalName>${project.artifactId}</finalName>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>fish.payara.maven.plugins</groupId>
					<artifactId>payara-micro-maven-plugin</artifactId>
					<version>1.0.4</version>
					<configuration>
						<payaraVersion>${payara.version}</payaraVersion>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<source>11</source>
					<target>11</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.sonatype.plugins</groupId>
				<artifactId>nexus-staging-maven-plugin</artifactId>
				<version>1.6.8</version>
				<extensions>true</extensions>
				<configuration>
					<serverId>ossrh</serverId>
					<nexusUrl>https://s01.oss.sonatype.org/</nexusUrl>
					<autoReleaseAfterClose>true</autoReleaseAfterClose>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>3.1.0</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>3.3.2</version>
				<configuration>
					<source>11</source>
					<detectJavaApiLink>false</detectJavaApiLink>
					<excludePackageNames>io.rtdi.appcontainer.odata.entity.*</excludePackageNames>
				</configuration>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
<!--			<plugin>-->
<!--			      <groupId>org.apache.maven.plugins</groupId>-->
<!--			      <artifactId>maven-gpg-plugin</artifactId>-->
<!--			      <version>1.6</version>-->
<!--			      <executions>-->
<!--				  <execution>-->
<!--				      <id>sign-artifacts</id>-->
<!--				      <phase>verify</phase>-->
<!--				      <goals>-->
<!--					  <goal>sign</goal>-->
<!--				      </goals>-->
<!--				      <configuration>-->
<!--					  &lt;!&ndash; Prevent `gpg` from using pinentry programs &ndash;&gt;-->
<!--					  <gpgArguments>-->
<!--					      <arg>&#45;&#45;pinentry-mode</arg>-->
<!--					      <arg>loopback</arg>-->
<!--					  </gpgArguments>-->
<!--				      </configuration>-->
<!--				  </execution>-->
<!--			      </executions>-->
<!--			</plugin>-->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<version>2.7</version>
			</plugin>
<!--			<plugin>-->
<!--				<groupId>org.codehaus.cargo</groupId>-->
<!--				<artifactId>cargo-maven3-plugin</artifactId>-->
<!--				<version>${cargo-maven3-plugin.version}</version>-->
<!--				<configuration>-->
<!--					<wait>true</wait>-->
<!--					<container>-->
<!--						<containerId>jetty11x</containerId>-->
<!--						<type>embedded</type>-->
<!--					</container>-->
<!--					<configuration>-->
<!--						<properties>-->
<!--							<cargo.servlet.port>8082</cargo.servlet.port>-->
<!--						</properties>-->
<!--					</configuration>-->
<!--				</configuration>-->
<!--			</plugin>-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>fish.payara.extras</groupId>
				<artifactId>payara-micro</artifactId>
				<version>${payara.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>fish.payara.extras</groupId>
				<artifactId>payara-embedded-all</artifactId>
				<version>${payara.version}</version>
				<scope>provided</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>jakarta.platform</groupId>
			<artifactId>jakarta.jakartaee-web-api</artifactId>
			<version>9.1.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>jakarta.xml.bind</groupId>
			<artifactId>jakarta.xml.bind-api</artifactId>
			<version>4.0.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>io.swagger.core.v3</groupId>
			<artifactId>swagger-annotations</artifactId>
			<version>2.1.11</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jsr310</artifactId>
			<version>2.13.2</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-xml</artifactId>
			<version>2.13.2</version>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>${junit.jupiter.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>${junit.jupiter.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-params</artifactId>
			<version>${junit.jupiter.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
		    <groupId>com.github.ben-manes.caffeine</groupId>
		    <artifactId>caffeine</artifactId>
		    <version>3.0.6</version>
		</dependency>
		<dependency>
			<groupId>net.snowflake</groupId>
			<artifactId>snowflake-jdbc</artifactId>
			<version>3.13.21</version>
		</dependency>
	</dependencies>
</project>
